{"version":3,"file":"component---src-pages-contact-index-tsx-04e67f1272e6ec0e2318.js","mappings":"mRAKA,MAAMA,EAAS,2JAYTC,EAASC,IAAoBC,EAAAA,EAAAA,KAAG,sCAEP,YAATD,EAAqB,UAAY,UAAS,iUAuB1DE,EAAYC,IAA4C,IAA3C,SAAEC,GAAmC,EACtD,OACEC,EAAAA,EAAAA,KAAAA,MAAAA,CAAKJ,IAAKH,EAAWQ,UAAU,cAC5BF,EACG,EAaV,MATcG,IAAyF,IAAxF,KAAEP,EAAI,QAAEQ,EAAO,QAAEC,GAAiE,EAC/F,OACEJ,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,UAAS,eAAiBN,EAAQ,iBAAgBS,EAASR,IAAKF,EAAMC,IACxEQ,EACG,E,UC5CV,MAAME,EAAU,CAAHC,KAAAA,SAAAC,OAAAA,6DAMPC,EAAQ,CAAHF,KAAAA,UAAAC,OAAAA,6EAOLE,EAAQ,CAAHH,KAAAA,UAAAC,OAAAA,gRAsBLG,EAAW,CAAHJ,KAAAA,UAAAC,OAAAA,4RA2Fd,MApEyC,KAErCP,EAAAA,EAAAA,KAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACC,OAAK,EAACJ,MAAM,wCAAwCK,YAAY,8DACtEb,EAAAA,EAAAA,KAAAA,UAAAA,CAASJ,IAAKS,EAASJ,UAAU,YAC/BD,EAAAA,EAAAA,KAACc,EAAAA,OAAM,CAACC,GAAG,iBAAe,++CAsC1Bf,EAAAA,EAAAA,KAACgB,EAAAA,EAAS,MACRhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,MACFjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAG,CAACC,GAAI,KACPnB,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,UAAU,kBACbD,EAAAA,EAAAA,KAAAA,KAAAA,CAAIJ,IAAKY,GAAO,eAChBR,EAAAA,EAAAA,KAAAA,OAAAA,CAAMoB,OAAO,OAAOC,cAAc,QAAQN,GAAG,SAC3Cf,EAAAA,EAAAA,KAAAA,QAAAA,CAAOJ,IAAKa,EAAOd,KAAK,OAAOW,KAAK,OAAOgB,YAAY,UACvDtB,EAAAA,EAAAA,KAAAA,QAAAA,CAAOJ,IAAKa,EAAOd,KAAK,QAAQW,KAAK,QAAQgB,YAAY,WACzDtB,EAAAA,EAAAA,KAAAA,QAAAA,CAAOL,KAAK,SAASW,KAAK,UAAUiB,MAAO,CAAEC,QAAS,WACtDxB,EAAAA,EAAAA,KAAAA,WAAAA,CAAUJ,IAAKc,EAAUJ,KAAK,UAAUgB,YAAY,aACpDtB,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAAC9B,KAAK,UAAS,cAMhCK,EAAAA,EAAAA,KAACH,EAAS,MACRG,EAAAA,EAAAA,KAAC0B,EAAK,CAAC/B,KAAK,UAAUQ,QAAQ,+BAA+BC,SAAS,KACtEJ,EAAAA,EAAAA,KAAC0B,EAAK,CAAC/B,KAAK,QAAQQ,QAAQ,mBAAmBC,SAAS,OAS3D,MAAMuB,EAAe,KAAM3B,EAAAA,EAAAA,KAAAA,QAAAA,KAAO,0B","sources":["webpack://lylian-thothe-website/./src/components/UI/Toast/Toast.tsx","webpack://lylian-thothe-website/./src/pages/contact/index.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { css, keyframes } from '@emotion/react';\n\ntype toastType = 'success' | 'error';\n\nconst toastZone = css`\n  position: fixed;\n  right: 20px;\n  top: 20px;\n  z-index: 9999;\n  display: flex;\n  flex-direction: column;\n  max-width: 250px;\n  align-items: flex-end;\n  gap: 10px;\n`;\n\nconst toast = (type: toastType) => css`\n  border-radius: 5px;\n  background-color: ${type === 'success' ? '#4caf50' : '#f44336'};\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 20px;\n  transition: all 0.3s ease-in;\n  transform: translateX(100%);\n  opacity: 0;\n\n  &[data-displayed='true'] {\n    transform: translateX(0);\n    opacity: 1;\n  }\n\n  &[data-displayed='false'] {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n`;\n\nconst ToastArea = ({ children }: { children: ReactNode }) => {\n  return (\n    <div css={toastZone} className=\"toast-zone\">\n      {children}\n    </div>\n  );\n};\n\nconst Toast = ({ type, message, visible }: { type: toastType; message: string; visible: boolean }) => {\n  return (\n    <div className={`toast toast-${type}`} data-displayed={visible} css={toast(type)}>\n      {message}\n    </div>\n  );\n};\n\nexport { ToastArea };\nexport default Toast;\n","import * as React from 'react';\nimport { Script, type HeadFC, type PageProps } from 'gatsby';\nimport { css } from '@emotion/react';\nimport Container from '../../components/UI/Container';\nimport Row from '../../components/UI/Row';\nimport Col from '../../components/UI/Col';\nimport Button from '../../components/UI/Button';\nimport Toast, { ToastArea } from '../../components/UI/Toast/Toast';\nimport Hero from '../../components/hero';\n\nconst contact = css`\n  background: #000001;\n  padding-top: 100px;\n  padding-bottom: 100px;\n`;\n\nconst title = css`\n  color: #ffffff;\n  font-weight: 700;\n  text-transform: uppercase;\n  margin-bottom: 35px;\n`;\n\nconst input = css`\n  height: 50px;\n  width: 100%;\n  border: 1px solid rgba(225, 225, 225, 0.5);\n  background: transparent;\n  font-size: 16px;\n  color: #adadad;\n  padding-left: 20px;\n  font-weight: 300;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  transition: all, 0.3s;\n\n  &:focus {\n    border-color: #e1e1e1;\n  }\n\n  &::placeholder {\n    color: #adadad;\n  }\n`;\n\nconst textarea = css`\n  height: 110px;\n  width: 100%;\n  border: 1px solid rgba(225, 225, 225, 0.5);\n  background: transparent;\n  font-size: 16px;\n  color: #adadad;\n  padding-top: 12px;\n  padding-left: 20px;\n  font-weight: 300;\n  margin-bottom: 14px;\n  resize: none;\n  transition: all, 0.3s;\n\n  &:focus {\n    border-color: #e1e1e1;\n  }\n\n  &::placeholder {\n    color: #adadad;\n  }\n`;\n\nconst ContactPage: React.FC<PageProps> = () => {\n  return (\n    <>\n      <Hero small title=\"LYLIAN THOTHE - Music Visual Composer\" description=\"Contact me if you would like to start working together !\" />\n      <section css={contact} className=\"contact\">\n        <Script id=\"form_listener\">\n          {`\n          const form = document.getElementById(\"form\");\n          if (form) {\n            form.addEventListener(\"submit\", formSubmit);\n            function formSubmit(e) {\n                e.preventDefault();\n                const formData = new FormData(e.target);\n                fetch(\"https://getform.io/f/bwnggoka\", {\n                    method: \"POST\",\n                    body: formData,\n                    headers: {\n                        \"Accept\": \"application/json\",\n                    },\n                })\n                .then((response) => {\n                  const toastSuccess = document.querySelector('.toast-success');\n                  const toastFail = document.querySelector('.toast-error');\n                  if (response.ok && response.status === 200) {\n                    form.reset();\n                    if (toastSuccess) {\n                      toastSuccess.setAttribute('data-displayed', 'true');\n                      setTimeout(() => {\n                        toastSuccess.setAttribute('data-displayed', 'false');\n                      }, 2000);\n                    }\n                  } else {\n                    toastFail.setAttribute('data-displayed', 'true');\n                    setTimeout(() => {\n                      toastFail.setAttribute('data-displayed', 'false');\n                    }, 2000);\n                  }\n                })\n                .catch(error => console.log(error))\n            }\n          }\n        `}\n        </Script>\n        <Container>\n          <Row>\n            <Col sm={12}>\n              <div className=\"contact__form\">\n                <h3 css={title}>Contact Me</h3>\n                <form method=\"POST\" acceptCharset=\"UTF-8\" id=\"form\">\n                  <input css={input} type=\"text\" name=\"name\" placeholder=\"Name\" />\n                  <input css={input} type=\"email\" name=\"email\" placeholder=\"Email\" />\n                  <input type=\"hidden\" name=\"_gotcha\" style={{ display: 'none' }}></input>\n                  <textarea css={textarea} name=\"message\" placeholder=\"Message\"></textarea>\n                  <Button type=\"submit\">Send</Button>\n                </form>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n        <ToastArea>\n          <Toast type=\"success\" message=\"Your message has been sent !\" visible={false} />\n          <Toast type=\"error\" message=\"An error occured\" visible={false} />\n        </ToastArea>\n      </section>\n    </>\n  );\n};\n\nexport default ContactPage;\n\nexport const Head: HeadFC = () => <title>Lylian Thothe - Contact</title>;\n"],"names":["toastZone","toast","type","css","ToastArea","_ref","children","___EmotionJSX","className","_ref2","message","visible","contact","name","styles","title","input","textarea","Hero","small","description","Script","id","Container","Row","Col","sm","method","acceptCharset","placeholder","style","display","Button","Toast","Head"],"sourceRoot":""}